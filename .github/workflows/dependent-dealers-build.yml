name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
env:
  USER_NAME: Shubham is running this action.

jobs:
  # build:

  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v2
  #     with:
  #       dotnet-version: 6.0.x
  #   - name: Restore dependencies
  #     run: dotnet restore
  #   - name: Build
  #     run: dotnet build --no-restore
  #   - name: Test
  #     run: dotnet test --no-build --verbosity normal
  
  create-new-branch:

    runs-on: windows-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Install AWS CLI
      run: Install-Module -Name AWS.Tools.Installer
    - name: Build
      run: dotnet build --no-restore
    - name: List directory
      run: |
        ls
        cd ./LambdaProvider
        ls
        dotnet lambda deploy-function
        ls
    # - name: Install Touch Framework
    #   run: npm install touch-cli -g
    # - name: Check if branch already exists
    #   env: 
    #     LOCAL_ENV: Local Env is very easy.
    #   run: |
    #     echo "COMMIT_ID = $(git ls-remote --heads origin master)" >> $GITHUB_ENV
    #     echo "Global message is: $USER_NAME"
    #     echo "Local message is: $LOCAL_ENV"
    #     echo "Commit Id is: $COMMIT_ID"

    # - name: Create feature branch
    #   run: git checkout -b feature/engine_upgrade
    # - name: Initialize mandatory git config
    #   run: |
    #    git config user.name "GitHub Actions"
    #    git config user.email noreply@github.com
    # - name: Commit changelog and manifest files
    #   id: make-commit
    #   run: |
    #     touch initial
    #     git add initial
    #     git commit --m "Prepare release"
    #     git push --set-upstream origin feature/engine_upgrade
    # - name: Push new branch
    #   run: git push
